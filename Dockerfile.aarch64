FROM ghcr.io/linuxserver/baseimage-kasmvnc:arm64v8-debianbookworm

# set version label
ARG BUILD_DATE
ARG VERSION
ARG FREECAD_VERSION
LABEL build_version="Linuxserver.io version:- ${VERSION} Build-date:- ${BUILD_DATE}"
LABEL maintainer="thelamer"

# title
ENV TITLE=FreeCAD

RUN \
  echo "**** add icon ****" && \
  curl -o \
  /usr/share/icons/hicolor/48x48/apps/freecad.png \
  https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/freecad-logo.png
RUN \
  echo " install freecad from appimage " && \
  if [ -z ${FREECAD_VERSION+x} ]; then \
    FREECAD_URL=$(curl -sX GET "https://api.github.com/repos/FreeCAD/FreeCAD/releases/latest" | jq -r '.assets[] | select(.name | contains("Linux") and contains("aarch64")) | select(.name | contains("SHA256") | not) | .browser_download_url'); \
  else \
    ASSETS_URL=$(curl -sX GET "https://api.github.com/repos/FreeCAD/FreeCAD/releases/tags/${FREECAD_VERSION}" | jq -r '.assets_url'); \
    FREECAD_URL=$(curl -sX GET "$ASSETS_URL" | jq -r '.[] | select(.name | contains("Linux") and contains("aarch64") and (contains("SHA256") | not) and (contains(".zsync") | not)) | .browser_download_url'); \
  fi && \
  echo "Downloading FreeCAD from: ${FREECAD_URL}" && \
  cd /tmp && \
  curl -o /tmp/freecad.app -L ${FREECAD_URL} && \
  chmod +x /tmp/freecad.app && \
  ./freecad.app --appimage-extract && \
  mv squashfs-root /opt/freecad && \
  ln -s /opt/freecad/AppRun /usr/bin/freecad &&  \
  sed -i 's|</applications>|  <application title="FreeCAD*" type="normal">\n    <maximized>yes</maximized>\n  </application>\n</applications>|' /etc/xdg/openbox/rc.xml && \
  echo "**** cleanup ****" && \
  apt-get autoclean && \
  rm -rf \
    /config/.cache \
    /var/lib/apt/lists/* \
    /var/tmp/* \
    /tmp/*

# add local files
COPY /root /

# ports and volumes
EXPOSE 3000

VOLUME /config
